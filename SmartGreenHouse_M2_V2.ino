/*
 * –£–º–Ω–∞—è –¢–µ–ø–ª–∏—Ü–∞ –ô–æ–¢–∏–∫ –ú2
 */

#include <WiFi.h>
#include <WebServer.h>
#include <ArduinoJson.h>
#include <EEPROM.h>
#include <WiFiUdp.h>
#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>
#include <BH1750.h>
#include <TM1637Display.h>
#include <FastLED.h>
#include <ESP32Servo.h>

// Config –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–º
#include "Config.h"
// –ó–∞—Ç–µ–º GlobalInstances
#include "GlobalInstances.h"

WebServer server(80);

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
SystemSettings systemSettings;
SensorData sensorData;
DeviceConfig deviceConfig;

// –¢–∞–π–º–µ—Ä—ã
unsigned long previousSensorRead = 0;
unsigned long previousDisplayUpdate = 0;
unsigned long previousHealthCheck = 0;

const unsigned long SENSOR_READ_INTERVAL = 30000;
const unsigned long DISPLAY_UPDATE_INTERVAL = 2000;
const unsigned long HEALTH_CHECK_INTERVAL = 60000;

void setup() {
  Serial.begin(115200);
  delay(1000);
  
  Serial.println("\n\nSMART GREENHOUSE M2 - INITIALIZATION");
  
  // –¢–µ—Å—Ç —á–∏—Å–µ–ª
  for (int i = 0; i <= 100; i += 20) {
    char buffer[5];
    sprintf(buffer, "%4d", i);
    displayManager.showMessage(buffer);
    delay(300);
  }
  
  displayManager.clear();
  Serial.println("‚úÖ Display test complete");
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EEPROM –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  eepromManager.begin();
  if (!eepromManager.loadSettings(systemSettings)) {
    Serial.println("Using default settings");
    strcpy(systemSettings.wifiSSID, "GreenHouse");
    strcpy(systemSettings.wifiPassword, "password");
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤
  deviceManager.begin();
  
  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WiFi
  setupWiFi();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
  webInterface.begin(server);
  
  Serial.println("‚úÖ SYSTEM INITIALIZATION COMPLETE");
  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("üì° IP: " + WiFi.localIP().toString());
  }
  
  displayManager.showMessage("DONE");
  delay(1000);
}

void loop() {
  server.handleClient();
  
  unsigned long currentMillis = millis();
  
  // –ß—Ç–µ–Ω–∏–µ –¥–∞—Ç—á–∏–∫–æ–≤
  if (currentMillis - previousSensorRead >= SENSOR_READ_INTERVAL) {
    previousSensorRead = currentMillis;
    deviceManager.readAllSensors();   
    if (systemSettings.automationEnabled) {
      automation.process(sensorData, systemSettings, deviceManager);
    }
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∏—Å–ø–ª–µ—è
  if (currentMillis - previousDisplayUpdate >= DISPLAY_UPDATE_INTERVAL) {
    previousDisplayUpdate = currentMillis;
    displayManager.updateDisplay(sensorData, systemSettings);
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
  if (currentMillis - previousHealthCheck >= HEALTH_CHECK_INTERVAL) {
    previousHealthCheck = currentMillis;
    deviceManager.checkDeviceHealth();
  }
}

void setupWiFi() {
  Serial.print("üì° Connecting to ");
  Serial.println(systemSettings.wifiSSID);
  
  WiFi.begin(systemSettings.wifiSSID, systemSettings.wifiPassword);
  
  int attempts = 0;
  while (WiFi.status() != WL_CONNECTED && attempts < 20) {
    delay(1000);
    Serial.print(".");
    attempts++;
  }
  
  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("\n‚úÖ Connected! IP: " + WiFi.localIP().toString());
  } else {
    Serial.println("\nüîÑ Starting AP mode...");
    WiFi.softAP("SmartGreenhouse-M2", "12345678");
    Serial.println("üì∂ AP IP: " + WiFi.softAPIP().toString());
  }
}